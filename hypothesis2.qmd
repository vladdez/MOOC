---
title: "Hypothesis 2"
format:
  html:
    toc: true
    html-math-method: katex
    css: styles.css
    code-fold: true
    code-summary: "Show the code"
editor: visual
#jupyter: julia-1.8
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

```{r, message= FALSE, warning=FALSE, echo=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(dplyr)
library(data.table)
library(lme4)
library(glmmTMB)
library(ggplot2)
library(pscl) # for odTest
library(arm)
library(sjPlot)
library(rstatix)
library(car)
library(glue)
library(mediation)
library(utils)
library(arm)
library(diagram)
library(boot)
library(parallel)
library(tictoc)

remove_outliers <- function(x, na.rm = TRUE, ...) {
  qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
  H <- 1.5 * IQR(x, na.rm = na.rm)
  y <- x
  y[x < (qnt[1] - H)] <- NA
  y[x > (qnt[2] + H)] <- NA
  y
}

med_diagram <- function(data, height = .75, width = 2, graph_label = NA, node_text_size = 12, edge_text_size = 12, color = "black", ranksep = .2, minlen = 3){
  
  require(glue)
  require(DiagrammeR)
  
  data$height  <- height   # node height
  data$width   <- width    # node width
  data$color   <- color    # node + edge border color
  data$ranksep <- ranksep  # separation btwn mediator row and x->y row
  data$minlen  <- minlen   # minimum edge length
  
  data$node_text_size  <- node_text_size
  data$edge_text_size  <- edge_text_size
  
  data$graph_label <- ifelse(is.na(graph_label), "", paste0("label = '", graph_label, "'"))

diagram_out <- glue::glue_data(data,
  "digraph flowchart {
      fontname = Helvetica
      <<graph_label>>
      graph [ranksep = <<ranksep>>]

      # node definitions with substituted label text
      node [fontname = Helvetica, shape = rectangle, fixedsize = TRUE, width = <<width>>, height = <<height>>, fontsize = <<node_text_size>>, color = <<color>>]        
        mm [label = '<<lab_m>>']
        xx [label = '<<lab_x>>']
        yy [label = '<<lab_y>>']

      # edge definitions with the node IDs
      edge [minlen = <<minlen>>, fontname = Helvetica, fontsize = <<edge_text_size>>, color = <<color>>]
        mm -> yy [label = '<<coef_my>>'];
        xx -> mm [label = '<<coef_xm>>'];
        xx -> yy [label = '<<coef_xy>>'];
      
      { rank = same; mm }
      { rank = same; xx; yy }
      
      }

      ", .open = "<<", .close = ">>")  


DiagrammeR::grViz(diagram_out)  
}

```

```{r, message= FALSE, warning=FALSE, echo=FALSE}
wd <- getwd()
#system('7z x data/assignments.zip -odata/.')

assignments <- fread("data/assignments.csv") %>%    # works in Ubuntu
  mutate(course_item_type_desc = factor(course_item_type_desc), 
         forum_attendance = ifelse(vis_tw==0, 0, 1), 
         vis_before_attempt_tw_b = ifelse(vis_before_attempt_tw==0, 0, 1), 
         vis_before_attempt_tw_b = factor(vis_before_attempt_tw_b), 
         course_item_type_id = factor(ifelse(course_item_type_id=="106", 0, 1))) %>% # 106 = quiz
  group_by(course_item_id) %>% 
  mutate(difficulty =  sum(first_attempt == 0) / n()) %>% 
  dplyr::rename(CFA = first_attempt, forum_attendance_tw = vis_before_attempt_tw_b) %>% 
  ungroup()  %>% 
  dplyr::select(assignment_time, forum_attendance, difficulty, CFA, forum_attendance_tw, hse_user_id, course_item_name, course_item_type_id, attempts)
#tw <- assignments %>% filter(assignment_time < 116)  # delete observations over 3d quantile
```

## Research questions

1.  Is there a mediation effect between item difficulty and CFA, where forum attendance is a mediator?
2.  Is there a mediation effect between item type and CFA, where forum attendance is a mediator?

## Database desciption

-   **assignments** - database with data on the the level individual assignments

## Variables description

Important:

-   **forum_attendance_tw** - Forum attendance during time window (start of assignment-first attempt). Binary.\
-   **forum_visits_tw** - the number of forum visits during time window. Counted.\
-   **CFA** - Correctness of the first attempt. Binary.
-   **difficulty** - the number of students failed / the number of student participated. From 0 to 1.

Less important:

-   **hse_user_id** - a student token;
-   **course_item_name** and **course_item_type_desc** - item token/name and item type;

Analysis is influenced by https://towardsdatascience.com/doing-and-reporting-your-first-mediation-analysis-in-r-2fe423b92171

## Mediation analyses

```{r}
# p-value stars transformer
transform_pvalue <- function(p_value) {
  if (p_value < 0.001) {
    transformed <- "***"
  } else if (p_value < 0.01) {
    transformed <- "**"
  } else if (p_value < 0.05) {
    transformed <- "*"
  } else {
    transformed <- ""
  }
  
  return(transformed)
}
```

### Diffculty as DV

```{r}
# grouping by user
tw1 <- assignments %>% group_by(hse_user_id) %>% 
  summarise(difficulty = median(difficulty), 
            forum_attendance_tw = median(as.numeric(forum_attendance_tw) - 1), 
            CFA = median(CFA)) 

# grouping by course
tw2 <- assignments %>% group_by(course_item_name) %>% 
  summarise(difficulty = median(difficulty), 
            forum_attendance_tw = median(as.numeric(forum_attendance_tw) - 1),  
            CFA = median(CFA)) 
```

#### Grouping by users

```{r}
# Step 1: Y ~ X
fit.totaleffect <- glm(data = data.table(tw1), CFA ~ 1 + difficulty , family = "binomial") 
#summary(fit.totaleffect)

# Step 2: M ~ X
fit.mediator = glm(data = data.table(tw1), forum_attendance_tw ~ 1 + difficulty , family = "binomial") 
#summary(fit.mediator)
# there is an effect

# Step 3: Y ~ X + M 
fit.dv = glm(data = data.table(tw1), CFA ~ 1 + forum_attendance_tw + difficulty, family = "binomial")
#summary(fit.dv)
# there is an effect, but mediation is incomplete

# Step 4: Run the mediation analysis
results_m1 = mediate(fit.mediator, fit.dv, treat='difficulty', mediator='forum_attendance_tw')

# Step 5: View the mediation results
summary(results_m1)
```

```{r}
# total
cat(sprintf("1. Y ~ X\nTotal effect is %.4f.\n\n", summary(results_m1)$tau.coef))
cat(sprintf("Check 1: %.4f.\n",   fit.totaleffect$coefficients[2] ))
cat(sprintf("Check 2: %.4f.\n\n",    summary(results_m1)$z0 + round(summary(results_m1)$d0), 5)) # ADE + ACME

#ACME
cat(sprintf("2: Y ~ x * M\nAverage causal mediation effect (ACME) is %.5f.\nThis is the indirect effect of the IV (item difficulty) \non the DV (CFA) that goes through the mediator (forum attendance).\n\n", summary(results_m1)$d0))

cat(sprintf("Check: %.4f * %.4f = %.4f.\n\n",  fit.mediator$coefficients[2], fit.dv$coefficients[2], fit.mediator$coefficients[2] * fit.dv$coefficients[2] ))

#ADE
cat(sprintf("3: Y ~ X - M\nAverage direct effect (ADE) of the IV on the DV is %.4f.\n\n",  summary(results_m1)$z0))
cat(sprintf("Check 1: %.4f",  fit.dv$coefficients[3]))

```

```{r}
med_data <-
  data.frame(
    lab_x   = "Item\\nDifficulty",
    lab_m   = "Forum\\nattendance",
    lab_y   = "CFA",
    coef_xm = sprintf('%.2f %s', round(fit.mediator$coefficients[2], 2), transform_pvalue(summary(fit.mediator)$coefficients[8])),
    coef_my = sprintf('%.2f %s', round(fit.dv$coefficients[2], 2), 
transform_pvalue(summary(fit.dv)$coefficients[8])),
    coef_xy = sprintf('%.2f %s(%.2f)', fit.totaleffect$coefficients[2], transform_pvalue(summary(fit.totaleffect)$coefficients[8]),
fit.dv$coefficients[3])
  )

med_diagram(med_data)
```

#### Grouping by courses

```{r}
# Step 1: Y ~ X
fit.totaleffect <- glm(data = data.table(tw1), CFA ~ 1 + difficulty , family = "binomial") 
#summary(fit.totaleffect)

# Step 2: M ~ X
fit.mediator = glm(data = data.table(tw1), forum_attendance_tw ~ 1 + difficulty , family = "binomial") 
#summary(fit.mediator)
# there is an effect

# Step 3: Y ~ X + M 
fit.dv = glm(data = data.table(tw1), CFA ~ 1 + forum_attendance_tw + difficulty, family = "binomial")
#summary(fit.dv)
# there is an effect, but mediation is incomplete

# Step 4: Run the mediation analysis
results_m2 = mediate(fit.mediator, fit.dv, treat='difficulty', mediator='forum_attendance_tw')

# Step 5: View the mediation results
summary(results_m2)
```

```{r}
cat(sprintf("Step 1: X ~ Y\nTotal effect is %.4f.\n\n", summary(results_m2)$tau.coef))

cat(sprintf("Step 2: M ~ Y\nAverage causal mediation effect (ACME) is %.5f.\nThis is the indirect effect of the IV (item difficulty) \non the DV (CFA) that goes through the mediator (forum attendance).\n\n", summary(results_m2)$d0))

cat(sprintf("Step 3: X + M ~ Y\nAverage direct effect of the IV on the DV is %.4f.\n\n",  summary(results_m2)$z0))
```

### Type as DV

```{r}
tw3 <- assignments %>% group_by(hse_user_id) %>% summarise(course_item_type_id = median(as.numeric(course_item_type_id) - 1), forum_attendance_tw = median(as.numeric(forum_attendance_tw) - 1), CFA = median(CFA)) 

tw4 <- assignments %>% group_by(course_item_name) %>% summarise(course_item_type_id = median(as.numeric(course_item_type_id) - 1), forum_attendance_tw = median(as.numeric(forum_attendance_tw) - 1), CFA = median(CFA)) 
```

#### Groupung by users

```{r}
fit.totaleffect <- glm(data = data.table(tw3), CFA ~ 1 + course_item_type_id , family = "binomial") 
#summary(fit.totaleffect)

fit.mediator = glm(data = data.table(tw3), forum_attendance_tw ~ 1 + course_item_type_id , family = "binomial") 
#summary(fit.mediator)
# there is an effect

fit.dv = glm(data = data.table(tw3), CFA ~ 1 + forum_attendance_tw + course_item_type_id, family = "binomial")
#summary(fit.dv)

results_m1 = mediate(fit.mediator, fit.dv, treat='course_item_type_id', mediator='forum_attendance_tw')
summary(results_m1)
```

```{r}
cat(sprintf("Step 1: X ~ Y\nTotal effect is %.4f.\n\n", summary(results_m1)$tau.coef))

cat(sprintf("Step 2: M ~ Y\nAverage causal mediation effect (ACME) is %.5f.\nThis is the indirect effect of the IV (item type) \non the DV (CFA) that goes through the mediator (forum attendance).\n\n", summary(results_m1)$d0))

cat(sprintf("Step 3: X + M ~ Y\nAverage direct effect of the IV on the DV is %.4f.\n\n",  summary(results_m1)$z0))
```

#### Grouping by courses

```{r}
# Step 1: X ~ Y
fit.totaleffect <- glm(data = data.table(tw4), CFA ~ 1 + course_item_type_id , family = "binomial") 
#summary(fit.totaleffect)
# there is an effect

# Step 2: M ~ Y
fit.mediator = glm(data = data.table(tw4), forum_attendance_tw ~ 1 + course_item_type_id , family = "binomial") 
#summary(fit.mediator)
# there is an effect

# Step 3: X + M ~ Y
fit.dv = glm(data = data.table(tw4), CFA ~ 1 + forum_attendance_tw + course_item_type_id, family = "binomial")
#summary(fit.dv)

# there is an effect, but mediation is incomplete

# Step 4: Run the mediation analysis
results_m2 = mediate(fit.mediator, fit.dv, treat='course_item_type_id', mediator='forum_attendance_tw')
summary(results_m2)

```

```{r}
cat(sprintf("Step 1: X ~ Y\nTotal effect is %.4f.\n\n", summary(results_m2)$tau.coef))

cat(sprintf("Step 2: M ~ Y\nAverage causal mediation effect (ACME) is %.5f.\nThis is the indirect effect of the IV (item type) \non the DV (CFA) that goes through the mediator (forum attendance).\n\n", summary(results_m2)$d0))

cat(sprintf("Step 3: X + M ~ Y\nAverage direct effect of the IV on the DV is %.4f.\n\n",  summary(results_m2)$z0))
```

### 2 random and 2 fixed effects

```{r}
# Step 1: Mediator Model (X → M)
m_2re_mediator <- glmmTMB(
  forum_attendance_tw  ~ 1 + difficulty + (1 | hse_user_id) + (1 | course_item_type_id), 
  data = assignments, 
  family = gaussian()
)
summary(m_2re_mediator)
```

```{r}
# Step 2: Total Effect Model (X → Y)
m_2re_total<- glmmTMB(
  CFA  ~ 1 + difficulty + (1 | hse_user_id) + (1 | course_item_type_id), 
  data = assignments, 
  family = gaussian()
)
summary(m_2re_total)
```

```{r}
# Step 3: Direct & Indirect Effects Model (X, M → Y)
m_2re_di <- glmmTMB(
  CFA ~ 1 + difficulty + forum_attendance_tw + (1 | hse_user_id) + (1 | course_item_type_id), 
  data = assignments, 
  family = binomial()
)
summary(m_2re_di)
```


checking the difference



